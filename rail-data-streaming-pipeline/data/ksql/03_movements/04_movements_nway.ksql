-- https://wiki.openraildata.com/index.php?title=TOC_Codes
-- https://wiki.openraildata.com/index.php?title=Train_Movements

SET 'auto.offset.reset' = 'earliest';
CREATE OR REPLACE STREAM TRAIN_MOVEMENTS 
     WITH (VALUE_FORMAT='AVRO') AS 
SELECT MVT.HEADER, 
       EXTRACTJSONFIELD(MVT.BODY,'$.event_type') as event_type,
       EXTRACTJSONFIELD(MVT.BODY,'$.gbtt_timestamp')  as gbtt_timestamp,
       EXTRACTJSONFIELD(MVT.BODY,'$.original_loc_stanox') as original_loc_stanox,
       EXTRACTJSONFIELD(MVT.BODY,'$.planned_timestamp')  as planned_timestamp,
       CAST(EXTRACTJSONFIELD(MVT.BODY,'$.timetable_variation') AS INT) AS TIMETABLE_VARIATION,
       EXTRACTJSONFIELD(MVT.BODY,'$.original_loc_timestamp')  as original_loc_timestamp,
       EXTRACTJSONFIELD(MVT.BODY,'$.current_train_id') as current_train_id,
       EXTRACTJSONFIELD(MVT.BODY,'$.delay_monitoring_point') as delay_monitoring_point,
       EXTRACTJSONFIELD(MVT.BODY,'$.next_report_run_time') as next_report_run_time,
       EXTRACTJSONFIELD(MVT.BODY,'$.reporting_stanox') as reporting_stanox,
       CAST(EXTRACTJSONFIELD(MVT.BODY,'$.actual_timestamp') AS BIGINT) as actual_timestamp,
       EXTRACTJSONFIELD(MVT.BODY,'$.correction_ind') as correction_ind,
       EXTRACTJSONFIELD(MVT.BODY,'$.event_source') as event_source,
       EXTRACTJSONFIELD(MVT.BODY,'$.train_file_address') as train_file_address,
       CASE WHEN LEN(EXTRACTJSONFIELD(MVT.BODY,'$.platform'))> 0 THEN 'Platform' + EXTRACTJSONFIELD(MVT.BODY,'$.platform')
             ELSE '' 
          END AS PLATFORM,
       EXTRACTJSONFIELD(MVT.BODY,'$.division_code') as division_code,
       EXTRACTJSONFIELD(MVT.BODY,'$.train_terminated') as train_terminated,
       EXTRACTJSONFIELD(MVT.BODY,'$.train_id') as train_id,
       EXTRACTJSONFIELD(MVT.BODY,'$.offroute_ind') as offroute_ind,
       CASE WHEN EXTRACTJSONFIELD(MVT.BODY,'$.variation_status') = 'ON TIME' THEN 'ON TIME' 
             WHEN EXTRACTJSONFIELD(MVT.BODY,'$.variation_status') = 'LATE' THEN EXTRACTJSONFIELD(MVT.BODY,'$.timetable_variation') + ' MINS LATE' 
             WHEN EXTRACTJSONFIELD(MVT.BODY,'$.variation_status')='EARLY' THEN EXTRACTJSONFIELD(MVT.BODY,'$.timetable_variation') + ' MINS EARLY' 
        END AS VARIATION,
       CASE WHEN EXTRACTJSONFIELD(MVT.BODY,'$.variation_status') = 'ON TIME' THEN 0
             WHEN EXTRACTJSONFIELD(MVT.BODY,'$.variation_status') = 'LATE' THEN 1
             WHEN EXTRACTJSONFIELD(MVT.BODY,'$.variation_status')='EARLY' THEN 0
        END AS LATE_IND,
       EXTRACTJSONFIELD(MVT.BODY,'$.variation_status') as variation_status,
       EXTRACTJSONFIELD(MVT.BODY,'$.train_service_code') as train_service_code,
       EXTRACTJSONFIELD(MVT.BODY,'$.toc_id') as toc_id,
        CASE WHEN EXTRACTJSONFIELD(MVT.BODY,'$.toc_id') = '20' THEN 'TransPennine Express'
               WHEN EXTRACTJSONFIELD(MVT.BODY,'$.toc_id') = '23' THEN 'Arriva Trains Northern'
               WHEN EXTRACTJSONFIELD(MVT.BODY,'$.toc_id') = '28' THEN 'East Midlands Trains'
               WHEN EXTRACTJSONFIELD(MVT.BODY,'$.toc_id') = '61' THEN 'London North Eastern Railway'
              ELSE '<unknown TOC code: ' + EXTRACTJSONFIELD(MVT.BODY,'$.toc_id') + '>'
        END AS TOC,
       EXTRACTJSONFIELD(MVT.BODY,'$.loc_stanox') as loc_stanox,
        S.TPS_DESCRIPTION AS LOC_NLCDESC,
        S.GEOHASH AS GEOHASH, 
        S.GEO_LATLON AS GEO_LATLON,
        S.GEO_OSM_URL AS GEO_OSM_URL,
       EXTRACTJSONFIELD(MVT.BODY,'$.auto_expected') as auto_expected,
       EXTRACTJSONFIELD(MVT.BODY,'$.direction_ind') as direction_ind,
       EXTRACTJSONFIELD(MVT.BODY,'$.route') as route,
       EXTRACTJSONFIELD(MVT.BODY,'$.planned_event_type') as planned_event_type,
       EXTRACTJSONFIELD(MVT.BODY,'$.next_report_stanox') as next_report_stanox,
       EXTRACTJSONFIELD(MVT.BODY,'$.line_ind') as line_ind,
       CONCAT_WS('/',
                 EXTRACTJSONFIELD(MVT.BODY,'$.train_id'),
                 EXTRACTJSONFIELD(MVT.BODY,'$.planned_event_type'),
                 EXTRACTJSONFIELD(MVT.BODY,'$.loc_stanox')) AS MSG_KEY,
        TA.SCHEDULE_SOURCE AS SCHEDULE_SOURCE,
        TA.TP_ORIGIN_TIMESTAMP AS TP_ORIGIN_TIMESTAMP,
        TA.SCHEDULE_TYPE AS SCHEDULE_TYPE,
        TA.CREATION_TIMESTAMP AS CREATION_TIMESTAMP,
        TA.ORIGIN_DEP_TIMESTAMP AS ORIGIN_DEP_TIMESTAMP,
        TA.D1266_RECORD_NUMBER AS D1266_RECORD_NUMBER,
        TA.TRAIN_SERVICE_CODE AS TRAIN_SERVICE_CODE_02,
        TA.SCHED_ORIGIN_STANOX AS SCHED_ORIGIN_STANOX,
        TA.TRAIN_UID AS TRAIN_UID,
        TA.TRAIN_CALL_MODE AS TRAIN_CALL_MODE,
        TA.TP_ORIGIN_STANOX AS TP_ORIGIN_STANOX,
        TA.SCHEDULE_WTT_ID AS SCHEDULE_WTT_ID,
        TA.TRAIN_CALL_TYPE AS TRAIN_CALL_TYPE,
        TA.SCHEDULE_END_DATE AS SCHEDULE_END_DATE,
        TA.SCHEDULE_KEY AS SCHEDULE_KEY,
        TA.SCHED_ORIGIN_DESC AS SCHED_ORIGIN_DESC,
        SCH.CIF_TRAIN_UID AS CIF_TRAIN_UID,
        SCH.SCHEDULE_START_DATE AS SCHEDULE_START_DATE,
        SCH.CIF_STP_INDICATOR AS CIF_STP_INDICATOR,
        SCH.ATOC_CODE AS ATOC_CODE,
        SCH.TRAIN_STATUS AS TRAIN_STATUS,
        SCH.POWER_TYPE AS POWER_TYPE,
        SCH.SEATING_CLASSES AS SEATING_CLASSES,
        SCH.RESERVATIONS AS RESERVATIONS,
        SCH.SLEEPING_ACCOMODATION AS SLEEPING_ACCOMODATION,
        SCH.TRAIN_CATEGORY AS TRAIN_CATEGORY,
        SCH.ORIGIN_TIPLOC_CODE AS ORIGIN_TIPLOC_CODE,
        SCH.ORIGIN_TPS_DESCRIPTION AS ORIGIN_TPS_DESCRIPTION,
        SCH.ORIGIN_GEOHASH AS ORIGIN_GEOHASH,
        SCH.ORIGIN_PUBLIC_DEPARTURE_TIME AS ORIGIN_PUBLIC_DEPARTURE_TIME,
        SCH.ORIGIN_PLATFORM AS ORIGIN_PLATFORM,
        SCH.DESTINATION_TIPLOC_CODE AS DESTINATION_TIPLOC_CODE,
        SCH.DESTINATION_TPS_DESCRIPTION AS DESTINATION_TPS_DESCRIPTION,
        SCH.DESTINATION_GEOHASH AS DESTINATION_GEOHASH,
        SCH.DESTINATION_PUBLIC_ARRIVAL_TIME AS DESTINATION_PUBLIC_ARRIVAL_TIME,
        SCH.DESTINATION_PLATFORM AS DESTINATION_PLATFORM        
  FROM NETWORKRAIL_TRAIN_MVT_X MVT
      LEFT JOIN TRAIN_ACTIVATIONS_01_T TA
        ON EXTRACTJSONFIELD(MVT.BODY,'$.train_id') = TA.TRAIN_ID
      LEFT JOIN STANOX S
         ON EXTRACTJSONFIELD(MVT.BODY,'$.loc_stanox') = S.STANOX
      LEFT JOIN 
        SCHEDULE_T SCH 
        ON TA.SCHEDULE_KEY = SCH.SCHEDULE_KEY         
WHERE MVT.header->msg_type = '0003'
PARTITION BY CONCAT_WS('/',
                 EXTRACTJSONFIELD(MVT.BODY,'$.train_id'),
                 EXTRACTJSONFIELD(MVT.BODY,'$.planned_event_type'),
                 EXTRACTJSONFIELD(MVT.BODY,'$.loc_stanox'));
