--local ksqlDB
SET 'auto.offset.reset'='earliest';

CREATE STREAM UTILITY_SITE_LOCATION
(
    SITE_ID INT,
    SITE_DESCRIPTION STRING,
    SITE_LAT STRING,
    SITE_LONG STRING
)
WITH (
    KAFKA_TOPIC = 'UTILITY_SITE_LOCATION',
    VALUE_FORMAT = 'JSON'
);

CREATE STREAM UTILITY_WORK_ORDERS_TRUCK_JOINED
(
    WORK_ORDER_ID INT,
    SITE_ID INT,
    ASSIGNED_CREW INT KEY,
    STATUS STRING,
    COMMENT STRING,
    CREW_ID INT,
    TRUCK_ID INT,
    TRUCK_LAT STRING,
    TRUCK_LONG STRING
)
WITH (
    KAFKA_TOPIC = 'UTILITY_WORK_ORDERS_TRUCK_JOINED.REPLICA',
    VALUE_FORMAT = 'JSON'
);

--Rekey on site id, switch site location to avro
CREATE STREAM UTILITY_SITE_LOCATION_KEY
WITH (
    KAFKA_TOPIC = 'UTILITY_SITE_LOCATION_KEY',
    VALUE_FORMAT = 'AVRO',
    PARTITIONS = 6
) AS 
SELECT 
    SITE_ID,
    SITE_DESCRIPTION,
    SITE_LAT,
    SITE_LONG
FROM UTILITY_SITE_LOCATION
PARTITION BY SITE_ID;

CREATE STREAM UTILITY_WORK_ORDERS_TRUCK_KEY
WITH (
    KAFKA_TOPIC = 'UTILITY_WORK_ORDERS_TRUCK_KEY',
    VALUE_FORMAT = 'AVRO',
    PARTITIONS = 6
) AS 
SELECT
    WORK_ORDER_ID,
    SITE_ID,
    ASSIGNED_CREW,
    STATUS,
    COMMENT,
    TRUCK_ID,
    TRUCK_LAT,
    TRUCK_LONG
FROM UTILITY_WORK_ORDERS_TRUCK_JOINED
PARTITION BY SITE_ID;

--Create site location table
CREATE TABLE UTILITY_SITE_LOCATION_TABLE
(
    SITE_ID INT PRIMARY KEY,
    SITE_DESCRIPTION STRING,
    SITE_LAT STRING,
    SITE_LONG STRING
)
WITH (
    KAFKA_TOPIC = 'UTILITY_SITE_LOCATION_KEY',
    VALUE_FORMAT = 'AVRO'
);

--Join work orders with site location
CREATE STREAM UTILITY_WORK_ORDERS_TRUCK_SITE_JOINED
WITH (
    KAFKA_TOPIC = 'UTILITY_WORK_ORDERS_TRUCK_SITE_JOINED',
    VALUE_FORMAT = 'AVRO'
) AS 
SELECT
    WORK_ORDER_ID,
    ASSIGNED_CREW,
    STATUS,
    COMMENT,
    TRUCK_ID,
    TRUCK_LAT,
    TRUCK_LONG,
    wo.SITE_ID AS WO_SITE_ID,
    SITE_DESCRIPTION,
    SITE_LAT,
    SITE_LONG
FROM UTILITY_WORK_ORDERS_TRUCK_KEY wo
LEFT OUTER JOIN UTILITY_SITE_LOCATION_TABLE sl
ON wo.SITE_ID = sl.SITE_ID
PARTITION BY WORK_ORDER_ID;

CREATE TABLE UTILITY_WORK_ORDERS_LOOKUP
WITH (
    KAFKA_TOPIC = 'UTILITY_WORK_ORDERS_LOOKUP',
    VALUE_FORMAT = 'AVRO'
) AS 
SELECT
    WORK_ORDER_ID,
    LATEST_BY_OFFSET(ASSIGNED_CREW) AS LATEST_ASSIGNED_CREW,
    LATEST_BY_OFFSET(STATUS) AS LASTEST_STATUS,
    LATEST_BY_OFFSET(COMMENT) AS LATEST_COMMENT,
    LATEST_BY_OFFSET(TRUCK_ID) AS LATEST_TRUCK_ID,
    LATEST_BY_OFFSET(TRUCK_LAT) AS LATEST_TRUCK_LAT,
    LATEST_BY_OFFSET(TRUCK_LONG) AS LATEST_TRUCK_LONG,
    LATEST_BY_OFFSET(WO_SITE_ID) AS LATEST_SITE_ID,
    LATEST_BY_OFFSET(SITE_DESCRIPTION) AS LATEST_SITE_DESC,
    LATEST_BY_OFFSET(SITE_LAT) AS LATEST_SITE_LAT,
    LATEST_BY_OFFSET(SITE_LONG) AS LATEST_SITE_LONG
FROM UTILITY_WORK_ORDERS_TRUCK_SITE_JOINED
GROUP BY WORK_ORDER_ID;